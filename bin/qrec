#!/usr/bin/env python

import thread
import os
from optparse import OptionParser
import pyaudio
import wave


# =============
# Parse Options
# =============

parser = OptionParser()
parser.add_option("-o", "--output", dest="output",
                  help="create sound files in DIR", metavar="DIR",
                  default="./sound")

(options, args) = parser.parse_args()

# Prepare output directory
dir = options.output
if not os.path.exists(dir):
    os.makedirs(dir)


# ===========
# Setup Audio
# ===========

CHUNK = 1024
FORMAT = pyaudio.paInt16
CHANNELS = 2
RATE = 44100
RECORD_SECONDS = 5

p = pyaudio.PyAudio()

# ================
# Open Source File
# ================

with open(args[0]) as f:
    # Get list of non empty lines
    lines = [l.rstrip() for l in f if l.strip()]


def ask_record(line):
    print str(i) + "  \033[92m" + l + "\033[0m\t",
    while True:
        ans = raw_input("(r: record, c: cancel) [r] ")
        if ans == 'c':
            print "Exiting..."
            exit()
        elif ans == '' or ans == 'r':
            record(line)
            break
        else:
            print "Invalid answer"


def recording_input(_list):
    raw_input()
    _list.append(None)


def record(line):
    print u"\033[91m0\033[0m recording..."  # char record: \u23fa

    l = []
    thread.start_new_thread(recording_input, (l,))

    stream = p.open(format=FORMAT,
                    channels=CHANNELS,
                    rate=RATE,
                    input=True,
                    frames_per_buffer=CHUNK)

    frames = []
    while not l:
        data = stream.read(CHUNK)
        frames.append(data)

    stream.stop_stream()
    stream.close()

    print "...finished"

    filename = options.output + "/" + "_".join(line.split())

    wf = wave.open(filename, 'wb')
    wf.setnchannels(CHANNELS)
    wf.setsampwidth(p.get_sample_size(FORMAT))
    wf.setframerate(RATE)
    wf.writeframes(b''.join(frames))
    wf.close()

    print "created new file: " + filename


print "\n\nWelcome to QRec (" + str(len(lines)) + " files to record)\n"

for i, l in enumerate(lines):
    ask_record(l)


p.terminate()

exit()

# vim: set filetype=python:
